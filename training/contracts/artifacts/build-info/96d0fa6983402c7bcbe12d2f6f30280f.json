{
	"id": "96d0fa6983402c7bcbe12d2f6f30280f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Constructor.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n\n// Birden fazla parametrenin baslangic degerlerini constructor icerisinde yapabiliriz.\n\ncontract ConstructorContract{\n    address public owner;\n    int public totalNumber;\n\n    constructor (int _totalNumber) public{\n        owner = msg.sender;\n        totalNumber = _totalNumber;\n    }\n\n    fallback () external payable{}\n\n\n    // Eger gönderici owner degilse islem gerceklesmez!\n    // revert islemi durdurur.\n\n    function getBalance_long_way() public view returns(uint) {\n        if(msg.sender == owner){\n            return address(this).balance;\n        }\n        else{\n            revert();                 // revert islemi durdurur.\n        }                             // Eger gönderici owner degilse islem gerceklesmez!  \n    }\n\n    // Yukaridaki fonksiyonun daha sade hali:\n    function getBalance() public view returns(uint){\n        require(msg.sender == owner, \"Only the owner can call the function\");\n        return address(this).balance;\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Constructor.sol": {
				"ConstructorContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "_totalNumber",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance_long_way",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalNumber",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Constructor.sol\":159:1035  contract ConstructorContract{... */\n  mstore(0x40, 0x80)\n    /* \"training/contracts/Constructor.sol\":248:356  constructor (int _totalNumber) public{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"training/contracts/Constructor.sol\":303:313  msg.sender */\n  caller\n    /* \"training/contracts/Constructor.sol\":295:300  owner */\n  0x00\n  dup1\n    /* \"training/contracts/Constructor.sol\":295:313  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"training/contracts/Constructor.sol\":337:349  _totalNumber */\n  dup1\n    /* \"training/contracts/Constructor.sol\":323:334  totalNumber */\n  0x01\n    /* \"training/contracts/Constructor.sol\":323:349  totalNumber = _totalNumber */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"training/contracts/Constructor.sol\":248:356  constructor (int _totalNumber) public{... */\n  pop\n    /* \"training/contracts/Constructor.sol\":159:1035  contract ConstructorContract{... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:410   */\ntag_10:\n    /* \"#utility.yul\":370:377   */\n  0x00\n    /* \"#utility.yul\":399:404   */\n  dup2\n    /* \"#utility.yul\":388:404   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:410   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":416:536   */\ntag_11:\n    /* \"#utility.yul\":488:511   */\n  tag_19\n    /* \"#utility.yul\":505:510   */\n  dup2\n    /* \"#utility.yul\":488:511   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":481:486   */\n  dup2\n    /* \"#utility.yul\":478:512   */\n  eq\n    /* \"#utility.yul\":468:530   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":523:524   */\n  dup1\n    /* \"#utility.yul\":516:528   */\n  revert\n    /* \"#utility.yul\":468:530   */\ntag_20:\n    /* \"#utility.yul\":416:536   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":542:683   */\ntag_12:\n    /* \"#utility.yul\":598:603   */\n  0x00\n    /* \"#utility.yul\":629:635   */\n  dup2\n    /* \"#utility.yul\":623:636   */\n  mload\n    /* \"#utility.yul\":614:636   */\n  swap1\n  pop\n    /* \"#utility.yul\":645:677   */\n  tag_22\n    /* \"#utility.yul\":671:676   */\n  dup2\n    /* \"#utility.yul\":645:677   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":542:683   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":689:1038   */\ntag_3:\n    /* \"#utility.yul\":758:764   */\n  0x00\n    /* \"#utility.yul\":807:809   */\n  0x20\n    /* \"#utility.yul\":795:804   */\n  dup3\n    /* \"#utility.yul\":786:793   */\n  dup5\n    /* \"#utility.yul\":782:805   */\n  sub\n    /* \"#utility.yul\":778:810   */\n  slt\n    /* \"#utility.yul\":775:894   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":813:892   */\n  tag_25\n  tag_8\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":775:894   */\ntag_24:\n    /* \"#utility.yul\":933:934   */\n  0x00\n    /* \"#utility.yul\":958:1021   */\n  tag_26\n    /* \"#utility.yul\":1013:1020   */\n  dup5\n    /* \"#utility.yul\":1004:1010   */\n  dup3\n    /* \"#utility.yul\":993:1002   */\n  dup6\n    /* \"#utility.yul\":989:1011   */\n  add\n    /* \"#utility.yul\":958:1021   */\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":948:1021   */\n  swap2\n  pop\n    /* \"#utility.yul\":904:1031   */\n  pop\n    /* \"#utility.yul\":689:1038   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"training/contracts/Constructor.sol\":159:1035  contract ConstructorContract{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Constructor.sol\":159:1035  contract ConstructorContract{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbe6366ea\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc0daddfd\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n      stop\n        /* \"training/contracts/Constructor.sol\":861:1031  function getBalance() public view returns(uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      pop\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"training/contracts/Constructor.sol\":193:213  address public owner */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"training/contracts/Constructor.sol\":488:809  function getBalance_long_way() public view returns(uint) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"training/contracts/Constructor.sol\":219:241  int public totalNumber */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"training/contracts/Constructor.sol\":861:1031  function getBalance() public view returns(uint){... */\n    tag_11:\n        /* \"training/contracts/Constructor.sol\":903:907  uint */\n      0x00\n        /* \"training/contracts/Constructor.sol\":940:945  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"training/contracts/Constructor.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"training/contracts/Constructor.sol\":926:936  msg.sender */\n      caller\n        /* \"training/contracts/Constructor.sol\":926:945  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"training/contracts/Constructor.sol\":918:986  require(msg.sender == owner, \"Only the owner can call the function\") */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"training/contracts/Constructor.sol\":1003:1024  address(this).balance */\n      selfbalance\n        /* \"training/contracts/Constructor.sol\":996:1024  return address(this).balance */\n      swap1\n      pop\n        /* \"training/contracts/Constructor.sol\":861:1031  function getBalance() public view returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"training/contracts/Constructor.sol\":193:213  address public owner */\n    tag_16:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"training/contracts/Constructor.sol\":488:809  function getBalance_long_way() public view returns(uint) {... */\n    tag_21:\n        /* \"training/contracts/Constructor.sol\":539:543  uint */\n      0x00\n        /* \"training/contracts/Constructor.sol\":572:577  owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"training/contracts/Constructor.sol\":558:577  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"training/contracts/Constructor.sol\":558:568  msg.sender */\n      caller\n        /* \"training/contracts/Constructor.sol\":558:577  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"training/contracts/Constructor.sol\":555:720  if(msg.sender == owner){... */\n      tag_33\n      jumpi\n        /* \"training/contracts/Constructor.sol\":599:620  address(this).balance */\n      selfbalance\n        /* \"training/contracts/Constructor.sol\":592:620  return address(this).balance */\n      swap1\n      pop\n      jump(tag_32)\n        /* \"training/contracts/Constructor.sol\":555:720  if(msg.sender == owner){... */\n    tag_33:\n        /* \"training/contracts/Constructor.sol\":658:666  revert() */\n      0x00\n      dup1\n      revert\n        /* \"training/contracts/Constructor.sol\":488:809  function getBalance_long_way() public view returns(uint) {... */\n    tag_32:\n      swap1\n      jump\t// out\n        /* \"training/contracts/Constructor.sol\":219:241  int public totalNumber */\n    tag_25:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_36:\n        /* \"#utility.yul\":177:201   */\n      tag_48\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_35\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_13:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_50\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_36\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_37:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:670   */\n    tag_38:\n        /* \"#utility.yul\":611:618   */\n      0x00\n        /* \"#utility.yul\":640:664   */\n      tag_53\n        /* \"#utility.yul\":658:663   */\n      dup3\n        /* \"#utility.yul\":640:664   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":629:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_39:\n        /* \"#utility.yul\":763:787   */\n      tag_55\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_38\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_18:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_57\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_39\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1028:1104   */\n    tag_40:\n        /* \"#utility.yul\":1064:1071   */\n      0x00\n        /* \"#utility.yul\":1093:1098   */\n      dup2\n        /* \"#utility.yul\":1082:1098   */\n      swap1\n      pop\n        /* \"#utility.yul\":1028:1104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1110:1225   */\n    tag_41:\n        /* \"#utility.yul\":1195:1218   */\n      tag_60\n        /* \"#utility.yul\":1212:1217   */\n      dup2\n        /* \"#utility.yul\":1195:1218   */\n      tag_40\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1190:1193   */\n      dup3\n        /* \"#utility.yul\":1183:1219   */\n      mstore\n        /* \"#utility.yul\":1110:1225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1231:1449   */\n    tag_27:\n        /* \"#utility.yul\":1322:1326   */\n      0x00\n        /* \"#utility.yul\":1360:1362   */\n      0x20\n        /* \"#utility.yul\":1349:1358   */\n      dup3\n        /* \"#utility.yul\":1345:1363   */\n      add\n        /* \"#utility.yul\":1337:1363   */\n      swap1\n      pop\n        /* \"#utility.yul\":1373:1442   */\n      tag_62\n        /* \"#utility.yul\":1439:1440   */\n      0x00\n        /* \"#utility.yul\":1428:1437   */\n      dup4\n        /* \"#utility.yul\":1424:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1373:1442   */\n      tag_41\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1231:1449   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1455:1624   */\n    tag_42:\n        /* \"#utility.yul\":1539:1550   */\n      0x00\n        /* \"#utility.yul\":1573:1579   */\n      dup3\n        /* \"#utility.yul\":1568:1571   */\n      dup3\n        /* \"#utility.yul\":1561:1580   */\n      mstore\n        /* \"#utility.yul\":1613:1617   */\n      0x20\n        /* \"#utility.yul\":1608:1611   */\n      dup3\n        /* \"#utility.yul\":1604:1618   */\n      add\n        /* \"#utility.yul\":1589:1618   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1630:1853   */\n    tag_43:\n        /* \"#utility.yul\":1770:1804   */\n      0x4f6e6c7920746865206f776e65722063616e2063616c6c207468652066756e63\n        /* \"#utility.yul\":1766:1767   */\n      0x00\n        /* \"#utility.yul\":1758:1764   */\n      dup3\n        /* \"#utility.yul\":1754:1768   */\n      add\n        /* \"#utility.yul\":1747:1805   */\n      mstore\n        /* \"#utility.yul\":1839:1845   */\n      0x74696f6e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1834:1836   */\n      0x20\n        /* \"#utility.yul\":1826:1832   */\n      dup3\n        /* \"#utility.yul\":1822:1837   */\n      add\n        /* \"#utility.yul\":1815:1846   */\n      mstore\n        /* \"#utility.yul\":1630:1853   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1859:2225   */\n    tag_44:\n        /* \"#utility.yul\":2001:2004   */\n      0x00\n        /* \"#utility.yul\":2022:2089   */\n      tag_66\n        /* \"#utility.yul\":2086:2088   */\n      0x24\n        /* \"#utility.yul\":2081:2084   */\n      dup4\n        /* \"#utility.yul\":2022:2089   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2015:2089   */\n      swap2\n      pop\n        /* \"#utility.yul\":2098:2191   */\n      tag_67\n        /* \"#utility.yul\":2187:2190   */\n      dup3\n        /* \"#utility.yul\":2098:2191   */\n      tag_43\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2216:2218   */\n      0x40\n        /* \"#utility.yul\":2211:2214   */\n      dup3\n        /* \"#utility.yul\":2207:2219   */\n      add\n        /* \"#utility.yul\":2200:2219   */\n      swap1\n      pop\n        /* \"#utility.yul\":1859:2225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2231:2650   */\n    tag_31:\n        /* \"#utility.yul\":2397:2401   */\n      0x00\n        /* \"#utility.yul\":2435:2437   */\n      0x20\n        /* \"#utility.yul\":2424:2433   */\n      dup3\n        /* \"#utility.yul\":2420:2438   */\n      add\n        /* \"#utility.yul\":2412:2438   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2493   */\n      dup2\n        /* \"#utility.yul\":2478:2482   */\n      dup2\n        /* \"#utility.yul\":2474:2494   */\n      sub\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2459:2468   */\n      dup4\n        /* \"#utility.yul\":2455:2472   */\n      add\n        /* \"#utility.yul\":2448:2495   */\n      mstore\n        /* \"#utility.yul\":2512:2643   */\n      tag_69\n        /* \"#utility.yul\":2638:2642   */\n      dup2\n        /* \"#utility.yul\":2512:2643   */\n      tag_44\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2504:2643   */\n      swap1\n      pop\n        /* \"#utility.yul\":2231:2650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a3d9986e1a5f5bd4070dd391894842a3f00c3e384795b4d30b86822b825fc0264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1041:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "399:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "458:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "514:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "523:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "516:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "516:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "481:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "505:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "488:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "488:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "478:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "478:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "471:42:1"
															},
															"nodeType": "YulIf",
															"src": "468:62:1"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "451:5:1",
														"type": ""
													}
												],
												"src": "416:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "614:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "623:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "614:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "671:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "645:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:32:1"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "582:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "590:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "598:5:1",
														"type": ""
													}
												],
												"src": "542:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:273:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "811:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "813:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "813:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "813:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "786:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "795:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "782:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "807:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "778:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:32:1"
															},
															"nodeType": "YulIf",
															"src": "775:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "904:127:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "919:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "933:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "923:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "948:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "993:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1004:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "989:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "989:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1013:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "958:30:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "958:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "948:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:1",
														"type": ""
													}
												],
												"src": "689:349:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516104ac3803806104ac833981810160405281019061003291906100ba565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550506100e7565b600080fd5b6000819050919050565b61009781610084565b81146100a257600080fd5b50565b6000815190506100b48161008e565b92915050565b6000602082840312156100d0576100cf61007f565b5b60006100de848285016100a5565b91505092915050565b6103b6806100f66000396000f3fe6080604052600436106100435760003560e01c806312065fe0146100465780638da5cb5b14610071578063be6366ea1461009c578063c0daddfd146100c757610044565b5b005b34801561005257600080fd5b5061005b6100f2565b6040516100689190610232565b60405180910390f35b34801561007d57600080fd5b50610086610189565b604051610093919061028e565b60405180910390f35b3480156100a857600080fd5b506100b16101ad565b6040516100be9190610232565b60405180910390f35b3480156100d357600080fd5b506100dc610213565b6040516100e991906102c2565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610360565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361020b57479050610210565b600080fd5b90565b60015481565b6000819050919050565b61022c81610219565b82525050565b60006020820190506102476000830184610223565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102788261024d565b9050919050565b6102888161026d565b82525050565b60006020820190506102a3600083018461027f565b92915050565b6000819050919050565b6102bc816102a9565b82525050565b60006020820190506102d760008301846102b3565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c207468652066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b600061034a6024836102dd565b9150610355826102ee565b604082019050919050565b600060208201905081810360008301526103798161033d565b905091905056fea26469706673582212204a3d9986e1a5f5bd4070dd391894842a3f00c3e384795b4d30b86822b825fc0264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4AC CODESIZE SUB DUP1 PUSH2 0x4AC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xBA JUMP JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x97 DUP2 PUSH2 0x84 JUMP JUMPDEST DUP2 EQ PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB4 DUP2 PUSH2 0x8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0 JUMPI PUSH2 0xCF PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDE DUP5 DUP3 DUP6 ADD PUSH2 0xA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B6 DUP1 PUSH2 0xF6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xBE6366EA EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC0DADDFD EQ PUSH2 0xC7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B JUMPI SELFBALANCE SWAP1 POP PUSH2 0x210 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x247 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278 DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x26D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x2A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C207468652066756E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A PUSH1 0x24 DUP4 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH2 0x355 DUP3 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x379 DUP2 PUSH2 0x33D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A RETURNDATASIZE SWAP10 DUP7 0xE1 0xA5 CREATE2 0xBD BLOCKHASH PUSH17 0xDD391894842A3F00C3E384795B4D30B868 0x22 0xB8 0x25 0xFC MUL PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "159:876:0:-:0;;;248:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;303:10;295:5;;:18;;;;;;;;;;;;;;;;;;337:12;323:11;:26;;;;248:108;159:876;;88:117:1;197:1;194;187:12;334:76;370:7;399:5;388:16;;334:76;;;:::o;416:120::-;488:23;505:5;488:23;:::i;:::-;481:5;478:34;468:62;;526:1;523;516:12;468:62;416:120;:::o;542:141::-;598:5;629:6;623:13;614:22;;645:32;671:5;645:32;:::i;:::-;542:141;;;;:::o;689:349::-;758:6;807:2;795:9;786:7;782:23;778:32;775:119;;;813:79;;:::i;:::-;775:119;933:1;958:63;1013:7;1004:6;993:9;989:22;958:63;:::i;:::-;948:73;;904:127;689:349;;;;:::o;159:876:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_66": {
									"entryPoint": 242,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_long_way_46": {
									"entryPoint": 429,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": 393,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalNumber_5": {
									"entryPoint": 531,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2653:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:1",
														"type": ""
													}
												],
												"src": "442:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "619:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "629:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "658:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "640:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "640:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "629:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "601:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "611:7:1",
														"type": ""
													}
												],
												"src": "574:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "751:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "729:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "736:3:1",
														"type": ""
													}
												],
												"src": "676:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "931:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "944:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "870:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "882:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "893:4:1",
														"type": ""
													}
												],
												"src": "800:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1072:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1082:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1093:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1082:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1054:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1064:7:1",
														"type": ""
													}
												],
												"src": "1028:76:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1190:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1212:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "1195:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1195:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1183:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1183:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1183:36:1"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1161:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1168:3:1",
														"type": ""
													}
												],
												"src": "1110:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1327:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1360:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1337:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1439:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1424:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1373:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1373:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1311:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1322:4:1",
														"type": ""
													}
												],
												"src": "1231:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1551:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1568:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1573:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1561:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1561:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1589:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1608:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1613:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1589:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1523:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1528:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1539:11:1",
														"type": ""
													}
												],
												"src": "1455:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1736:117:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1758:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1766:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:14:1"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c207468652066756e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1770:34:1",
																		"type": "",
																		"value": "Only the owner can call the func"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1747:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1747:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1826:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1834:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:15:1"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1839:6:1",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1815:31:1"
														}
													]
												},
												"name": "store_literal_in_memory_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1728:6:1",
														"type": ""
													}
												],
												"src": "1630:223:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2005:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2015:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2081:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2022:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2187:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9",
																	"nodeType": "YulIdentifier",
																	"src": "2098:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2098:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2200:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2211:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1993:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2001:3:1",
														"type": ""
													}
												],
												"src": "1859:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2402:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2412:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2420:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2412:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2470:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2455:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2478:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2484:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2474:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2448:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2504:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2638:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2512:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2512:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2504:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2382:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2397:4:1",
														"type": ""
													}
												],
												"src": "2231:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can call the func\")\n\n        mstore(add(memPtr, 32), \"tion\")\n\n    }\n\n    function abi_encode_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c806312065fe0146100465780638da5cb5b14610071578063be6366ea1461009c578063c0daddfd146100c757610044565b5b005b34801561005257600080fd5b5061005b6100f2565b6040516100689190610232565b60405180910390f35b34801561007d57600080fd5b50610086610189565b604051610093919061028e565b60405180910390f35b3480156100a857600080fd5b506100b16101ad565b6040516100be9190610232565b60405180910390f35b3480156100d357600080fd5b506100dc610213565b6040516100e991906102c2565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a90610360565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361020b57479050610210565b600080fd5b90565b60015481565b6000819050919050565b61022c81610219565b82525050565b60006020820190506102476000830184610223565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102788261024d565b9050919050565b6102888161026d565b82525050565b60006020820190506102a3600083018461027f565b92915050565b6000819050919050565b6102bc816102a9565b82525050565b60006020820190506102d760008301846102b3565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e2063616c6c207468652066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b600061034a6024836102dd565b9150610355826102ee565b604082019050919050565b600060208201905081810360008301526103798161033d565b905091905056fea26469706673582212204a3d9986e1a5f5bd4070dd391894842a3f00c3e384795b4d30b86822b825fc0264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xBE6366EA EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0xC0DADDFD EQ PUSH2 0xC7 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x86 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x28E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20B JUMPI SELFBALANCE SWAP1 POP PUSH2 0x210 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x219 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x247 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x223 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x278 DUP3 PUSH2 0x24D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x26D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x27F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x2A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E2063616C6C207468652066756E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34A PUSH1 0x24 DUP4 PUSH2 0x2DD JUMP JUMPDEST SWAP2 POP PUSH2 0x355 DUP3 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x379 DUP2 PUSH2 0x33D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A RETURNDATASIZE SWAP10 DUP7 0xE1 0xA5 CREATE2 0xBD BLOCKHASH PUSH17 0xDD391894842A3F00C3E384795B4D30B868 0x22 0xB8 0x25 0xFC MUL PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "159:876:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;861:170;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:321;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;219:22;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;861:170;903:4;940:5;;;;;;;;;;;926:19;;:10;:19;;;918:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1003:21;996:28;;861:170;:::o;193:20::-;;;;;;;;;;;;:::o;488:321::-;539:4;572:5;;;;;;;;;;;558:19;;:10;:19;;;555:165;;599:21;592:28;;;;555:165;658:8;;;488:321;;:::o;219:22::-;;;;:::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:96::-;611:7;640:24;658:5;640:24;:::i;:::-;629:35;;574:96;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1028:76::-;1064:7;1093:5;1082:16;;1028:76;;;:::o;1110:115::-;1195:23;1212:5;1195:23;:::i;:::-;1190:3;1183:36;1110:115;;:::o;1231:218::-;1322:4;1360:2;1349:9;1345:18;1337:26;;1373:69;1439:1;1428:9;1424:17;1415:6;1373:69;:::i;:::-;1231:218;;;;:::o;1455:169::-;1539:11;1573:6;1568:3;1561:19;1613:4;1608:3;1604:14;1589:29;;1455:169;;;;:::o;1630:223::-;1770:34;1766:1;1758:6;1754:14;1747:58;1839:6;1834:2;1826:6;1822:15;1815:31;1630:223;:::o;1859:366::-;2001:3;2022:67;2086:2;2081:3;2022:67;:::i;:::-;2015:74;;2098:93;2187:3;2098:93;:::i;:::-;2216:2;2211:3;2207:12;2200:19;;1859:366;;;:::o;2231:419::-;2397:4;2435:2;2424:9;2420:18;2412:26;;2484:9;2478:4;2474:20;2470:1;2459:9;2455:17;2448:47;2512:131;2638:4;2512:131;:::i;:::-;2504:139;;2231:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "190000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "151",
								"getBalance()": "2602",
								"getBalance_long_way()": "2542",
								"owner()": "2511",
								"totalNumber()": "2473"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 248,
									"end": 356,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 303,
									"end": 313,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 295,
									"end": 300,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 295,
									"end": 300,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 295,
									"end": 313,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 295,
									"end": 313,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 295,
									"end": 313,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 295,
									"end": 313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 349,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 323,
									"end": 334,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 323,
									"end": 349,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 323,
									"end": 349,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 323,
									"end": 349,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 248,
									"end": 356,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 370,
									"end": 377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 388,
									"end": 404,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 388,
									"end": 404,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 410,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 416,
									"end": 536,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 416,
									"end": 536,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 488,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 505,
									"end": 510,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 488,
									"end": 511,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 488,
									"end": 511,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 488,
									"end": 511,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 488,
									"end": 511,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 481,
									"end": 486,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 478,
									"end": 512,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 468,
									"end": 530,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 530,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 523,
									"end": 524,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 516,
									"end": 528,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 468,
									"end": 530,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 530,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 416,
									"end": 536,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 416,
									"end": 536,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 542,
									"end": 683,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 542,
									"end": 683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 598,
									"end": 603,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 623,
									"end": 636,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 614,
									"end": 636,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 645,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 671,
									"end": 676,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 645,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 645,
									"end": 677,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 645,
									"end": 677,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 645,
									"end": 677,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 542,
									"end": 683,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 758,
									"end": 764,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 809,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 795,
									"end": 804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 786,
									"end": 793,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 782,
									"end": 805,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 778,
									"end": 810,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 775,
									"end": 894,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 775,
									"end": 894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 775,
									"end": 894,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 813,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 813,
									"end": 892,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 813,
									"end": 892,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 813,
									"end": 892,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 813,
									"end": 892,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 775,
									"end": 894,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 775,
									"end": 894,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 933,
									"end": 934,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1013,
									"end": 1020,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1004,
									"end": 1010,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 993,
									"end": 1002,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 989,
									"end": 1011,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 958,
									"end": 1021,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 958,
									"end": 1021,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 1021,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 958,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 948,
									"end": 1021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 948,
									"end": 1021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 1031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 689,
									"end": 1038,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 159,
									"end": 1035,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a3d9986e1a5f5bd4070dd391894842a3f00c3e384795b4d30b86822b825fc0264736f6c634300080d0033",
									".code": [
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "BE6366EA"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "C0DADDFD"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 1035,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 940,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 940,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 926,
											"end": 936,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 926,
											"end": 945,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 926,
											"end": 945,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 926,
											"end": 945,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 918,
											"end": 986,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 918,
											"end": 986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 996,
											"end": 1024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 861,
											"end": 1031,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 193,
											"end": 213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 213,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 572,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 572,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 568,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 558,
											"end": 577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 558,
											"end": 577,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 555,
											"end": 720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 720,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 599,
											"end": 620,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 592,
											"end": 620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 592,
											"end": 620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 592,
											"end": 620,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 720,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 555,
											"end": 720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 658,
											"end": 666,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 809,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 219,
											"end": 241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 219,
											"end": 241,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 611,
											"end": 618,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 658,
											"end": 663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 640,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 640,
											"end": 664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 629,
											"end": 664,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 574,
											"end": 670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 574,
											"end": 670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 574,
											"end": 670,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1028,
											"end": 1104,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1195,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1225,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1337,
											"end": 1363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1439,
											"end": 1440,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1373,
											"end": 1442,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1373,
											"end": 1442,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1373,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1449,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1568,
											"end": 1571,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1613,
											"end": 1617,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1604,
											"end": 1618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1624,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 1853,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1630,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C7920746865206F776E65722063616E2063616C6C207468652066756E63"
										},
										{
											"begin": 1766,
											"end": 1767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1747,
											"end": 1805,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "PUSH",
											"source": 1,
											"value": "74696F6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1834,
											"end": 1836,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1822,
											"end": 1837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1846,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1853,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2081,
											"end": 2084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2022,
											"end": 2089,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2022,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2022,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2187,
											"end": 2190,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2098,
											"end": 2191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2098,
											"end": 2191,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2098,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2218,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 2225,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2495,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2638,
											"end": 2642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2512,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2512,
											"end": 2643,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2512,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2512,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2231,
											"end": 2650,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"getBalance_long_way()": "be6366ea",
							"owner()": "8da5cb5b",
							"totalNumber()": "c0daddfd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_totalNumber\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance_long_way\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNumber\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Constructor.sol\":\"ConstructorContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Constructor.sol\":{\"keccak256\":\"0x589ad3a45f2e9d916623d63cc04b257b8abd60464f26b4b62fdfc2c48e77ebfe\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2085bb9e0eb1f5e777a989d2c055abcda9d762c56aa31678334a2d3d60769910\",\"dweb:/ipfs/QmRXTx7CGwDGspmko1D5WugjRmHbtYwrnPW3JD3rVrKwQj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "training/contracts/Constructor.sol:ConstructorContract",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "training/contracts/Constructor.sol:ConstructorContract",
								"label": "totalNumber",
								"offset": 0,
								"slot": "1",
								"type": "t_int256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> training/contracts/Constructor.sol:8:1:\n  |\n8 | contract ConstructorContract{\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> training/contracts/Constructor.sol:17:5:\n   |\n17 |     fallback () external payable{}\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 392,
						"file": "training/contracts/Constructor.sol",
						"message": "The payable fallback function is defined here.",
						"start": 362
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1035,
					"file": "training/contracts/Constructor.sol",
					"start": 159
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> training/contracts/Constructor.sol:12:5:\n   |\n12 |     constructor (int _totalNumber) public{\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 356,
					"file": "training/contracts/Constructor.sol",
					"start": 248
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Constructor.sol": {
				"ast": {
					"absolutePath": "training/contracts/Constructor.sol",
					"exportedSymbols": {
						"ConstructorContract": [
							67
						]
					},
					"id": 68,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConstructorContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "ConstructorContract",
							"nameLocation": "168:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "208:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "193:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "193:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c0daddfd",
									"id": 5,
									"mutability": "mutable",
									"name": "totalNumber",
									"nameLocation": "230:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "219:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 4,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "219:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "285:71:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "295:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "303:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "303:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "295:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "295:18:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "totalNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "323:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 16,
														"name": "_totalNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "337:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "323:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "323:26:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_totalNumber",
												"nameLocation": "265:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 6,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "261:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "260:18:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "285:0:0"
									},
									"scope": 67,
									"src": "248:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "390:2:0",
										"statements": []
									},
									"id": 24,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:0:0"
									},
									"scope": 67,
									"src": "362:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "545:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "558:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "558:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 31,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "572:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "558:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "644:76:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 40,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "658:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "658:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "ExpressionStatement",
															"src": "658:8:0"
														}
													]
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "555:165:0",
												"trueBody": {
													"id": 39,
													"nodeType": "Block",
													"src": "578:53:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 35,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "607:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_ConstructorContract_$67",
																				"typeString": "contract ConstructorContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_ConstructorContract_$67",
																				"typeString": "contract ConstructorContract"
																			}
																		],
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "599:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 33,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "599:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "599:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "599:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 28,
															"id": 38,
															"nodeType": "Return",
															"src": "592:28:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "be6366ea",
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance_long_way",
									"nameLocation": "497:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "516:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "539:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "539:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:6:0"
									},
									"scope": 67,
									"src": "488:321:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "908:123:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 52,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "926:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 54,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "940:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "926:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e2063616c6c207468652066756e6374696f6e",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "947:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9",
																"typeString": "literal_string \"Only the owner can call the function\""
															},
															"value": "Only the owner can call the function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d56c54c1d4b6ad414a74628249f84063870cf51d49b937b1d0d153034253e0d9",
																"typeString": "literal_string \"Only the owner can call the function\""
															}
														],
														"id": 51,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "918:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "918:68:0"
											},
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 61,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ConstructorContract_$67",
																	"typeString": "contract ConstructorContract"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ConstructorContract_$67",
																	"typeString": "contract ConstructorContract"
																}
															],
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 59,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1003:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1003:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1003:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 50,
												"id": 64,
												"nodeType": "Return",
												"src": "996:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "870:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:6:0"
									},
									"scope": 67,
									"src": "861:170:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 68,
							"src": "159:876:0",
							"usedErrors": []
						}
					],
					"src": "37:998:0"
				},
				"id": 0
			}
		}
	}
}