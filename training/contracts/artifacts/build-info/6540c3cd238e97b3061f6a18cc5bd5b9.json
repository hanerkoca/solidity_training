{
	"id": "6540c3cd238e97b3061f6a18cc5bd5b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Constructor.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract ConstructorContract{\n\n\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Constructor.sol": {
				"ConstructorContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Constructor.sol\":33:71  contract ConstructorContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Constructor.sol\":33:71  contract ConstructorContract{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a8af104167cad7e71a267956ee2cfb3656c434a71fd5a91b39accee55edc6b164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212204a8af104167cad7e71a267956ee2cfb3656c434a71fd5a91b39accee55edc6b164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP11 CALL DIV AND PUSH29 0xAD7E71A267956EE2CFB3656C434A71FD5A91B39ACCEE55EDC6B164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "33:38:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212204a8af104167cad7e71a267956ee2cfb3656c434a71fd5a91b39accee55edc6b164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A DUP11 CALL DIV AND PUSH29 0xAD7E71A267956EE2CFB3656C434A71FD5A91B39ACCEE55EDC6B164736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "33:38:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 71,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 71,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a8af104167cad7e71a267956ee2cfb3656c434a71fd5a91b39accee55edc6b164736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 71,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 71,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 71,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Constructor.sol\":\"ConstructorContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Constructor.sol\":{\"keccak256\":\"0x3f991e71e9c9ff7a51536fe6252fe9948b8622b7833db305e81fb5e519c1ff2b\",\"urls\":[\"bzz-raw://04fcd1f774557e87e4a6098eca3e3222c644119c0656a82f8012f5830f464638\",\"dweb:/ipfs/QmWV3ZWzBaVUFR8AE1eTqzBA9UA7sUfQ6wDFqKWUekH3bg\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> training/contracts/Constructor.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "training/contracts/Constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Constructor.sol": {
				"ast": {
					"absolutePath": "training/contracts/Constructor.sol",
					"exportedSymbols": {
						"ConstructorContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ConstructorContract",
							"nameLocation": "42:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:38:0",
							"usedErrors": []
						}
					],
					"src": "0:71:0"
				},
				"id": 0
			}
		}
	}
}