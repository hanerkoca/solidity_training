{
	"id": "608cf147b63dd0b4964a7563105bfc8b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Constructor.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract ConstructorContract{}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Constructor.sol": {
				"ConstructorContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Constructor.sol\":33:63  contract ConstructorContract{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Constructor.sol\":33:63  contract ConstructorContract{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d186043975d15d08cece3cb47e3f3209d417e88b0b6759cf201f945e1d7e8ec064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220d186043975d15d08cece3cb47e3f3209d417e88b0b6759cf201f945e1d7e8ec064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP7 DIV CODECOPY PUSH22 0xD15D08CECE3CB47E3F3209D417E88B0B6759CF201F94 0x5E SAR PUSH31 0x8EC064736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "33:30:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220d186043975d15d08cece3cb47e3f3209d417e88b0b6759cf201f945e1d7e8ec064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 DUP7 DIV CODECOPY PUSH22 0xD15D08CECE3CB47E3F3209D417E88B0B6759CF201F94 0x5E SAR PUSH31 0x8EC064736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "33:30:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 63,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d186043975d15d08cece3cb47e3f3209d417e88b0b6759cf201f945e1d7e8ec064736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 63,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 63,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 63,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Constructor.sol\":\"ConstructorContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Constructor.sol\":{\"keccak256\":\"0xc9f11bb1784ee2bf4cd44f3d15564325af8e9ce61fdb2c681f2a0d702389c386\",\"urls\":[\"bzz-raw://cfa0bce3bface267e621d3dd77d0d47a922daae456e3b764f0f2f7f612aba80a\",\"dweb:/ipfs/QmQhSAktLF2WF6e3zGwL2zhEHKJ46QEqK3bgD652wzbbcW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> training/contracts/Constructor.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "training/contracts/Constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Constructor.sol": {
				"ast": {
					"absolutePath": "training/contracts/Constructor.sol",
					"exportedSymbols": {
						"ConstructorContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ConstructorContract",
							"nameLocation": "42:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:30:0",
							"usedErrors": []
						}
					],
					"src": "0:64:0"
				},
				"id": 0
			}
		}
	}
}