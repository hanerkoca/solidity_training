{
	"id": "ef4a2e9c4acb7409fad709db7e31ec8b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Constructor.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract ConstructorContract{\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Constructor.sol": {
				"ConstructorContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Constructor.sol\":33:69  contract ConstructorContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Constructor.sol\":33:69  contract ConstructorContract{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fe4c03cfa12b4863ce8e989c6bbf6e9019e201716d5d60033989708a39a4bd8464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220fe4c03cfa12b4863ce8e989c6bbf6e9019e201716d5d60033989708a39a4bd8464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4C SUB 0xCF LOG1 0x2B BASEFEE PUSH4 0xCE8E989C PUSH12 0xBF6E9019E201716D5D600339 DUP10 PUSH17 0x8A39A4BD8464736F6C6343000807003300 ",
							"sourceMap": "33:36:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220fe4c03cfa12b4863ce8e989c6bbf6e9019e201716d5d60033989708a39a4bd8464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0x4C SUB 0xCF LOG1 0x2B BASEFEE PUSH4 0xCE8E989C PUSH12 0xBF6E9019E201716D5D600339 DUP10 PUSH17 0x8A39A4BD8464736F6C6343000807003300 ",
							"sourceMap": "33:36:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 69,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 69,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fe4c03cfa12b4863ce8e989c6bbf6e9019e201716d5d60033989708a39a4bd8464736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 69,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 69,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 69,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 69,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 69,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 69,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Constructor.sol\":\"ConstructorContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Constructor.sol\":{\"keccak256\":\"0xb7a2b94184ec154fd5b107c83a998ad4a8b0e30c249fa50158f9456e2bee197e\",\"urls\":[\"bzz-raw://5245e54ea2f0f27cb9a4df006124eeba615bd73e284d7d7013182866463fac12\",\"dweb:/ipfs/QmU77UoAMMG2gZkWHKHKCooU6Xy8RJ7kn5yYJagNk7Saiy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> training/contracts/Constructor.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "training/contracts/Constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Constructor.sol": {
				"ast": {
					"absolutePath": "training/contracts/Constructor.sol",
					"exportedSymbols": {
						"ConstructorContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ConstructorContract",
							"nameLocation": "42:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:36:0",
							"usedErrors": []
						}
					],
					"src": "0:69:0"
				},
				"id": 0
			}
		}
	}
}