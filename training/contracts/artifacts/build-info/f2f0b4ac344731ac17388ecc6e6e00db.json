{
	"id": "f2f0b4ac344731ac17388ecc6e6e00db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Polymorfizm.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract Poly{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Polymorfizm.sol": {
				"Poly": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Polymorfizm.sol\":33:48  contract Poly{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Polymorfizm.sol\":33:48  contract Poly{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220648a54be77cdaffba4615c86f3e904274803db7a26de626cafd5955a00bc2fe864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220648a54be77cdaffba4615c86f3e904274803db7a26de626cafd5955a00bc2fe864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8A54BE77CD 0xAF 0xFB LOG4 PUSH2 0x5C86 RETURN 0xE9 DIV 0x27 BASEFEE SUB 0xDB PUSH27 0x26DE626CAFD5955A00BC2FE864736F6C6343000807003300000000 ",
							"sourceMap": "33:15:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220648a54be77cdaffba4615c86f3e904274803db7a26de626cafd5955a00bc2fe864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x8A54BE77CD 0xAF 0xFB LOG4 PUSH2 0x5C86 RETURN 0xE9 DIV 0x27 BASEFEE SUB 0xDB PUSH27 0x26DE626CAFD5955A00BC2FE864736F6C6343000807003300000000 ",
							"sourceMap": "33:15:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 48,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220648a54be77cdaffba4615c86f3e904274803db7a26de626cafd5955a00bc2fe864736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 48,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 48,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 48,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Polymorfizm.sol\":\"Poly\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Polymorfizm.sol\":{\"keccak256\":\"0x1a6ea71e638c49a7975c5334e32ae05c3286319bfef2cab53117eb0d96bc8c73\",\"urls\":[\"bzz-raw://264085975706a6dba8508b6b444fb5122c679ed82505aa0d98c8315566960fee\",\"dweb:/ipfs/QmVkq22UPTx955xSX3s1sZppiLMa6KiMiDaqGasR7Ly6gk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> training/contracts/Polymorfizm.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "training/contracts/Polymorfizm.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Polymorfizm.sol": {
				"ast": {
					"absolutePath": "training/contracts/Polymorfizm.sol",
					"exportedSymbols": {
						"Poly": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Poly",
							"nameLocation": "42:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:15:0",
							"usedErrors": []
						}
					],
					"src": "0:48:0"
				},
				"id": 0
			}
		}
	}
}