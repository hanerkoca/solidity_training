{
	"id": "bb72f82a38da6b5a09dd5b0eed1f66f8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"training/contracts/Inheritence,sol.sol": {
				"content": "pragma solidity >=0.7.0 <0.9.0;\n\ncontract Country{}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"training/contracts/Inheritence,sol.sol": {
				"Country": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"training/contracts/Inheritence,sol.sol\":33:51  contract Country{} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"training/contracts/Inheritence,sol.sol\":33:51  contract Country{} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220025f17f594d1a26a61bff44da1c2772a0213b3a711733f1397cbeef42000122564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220025f17f594d1a26a61bff44da1c2772a0213b3a711733f1397cbeef42000122564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x5F OR CREATE2 SWAP5 0xD1 LOG2 PUSH11 0x61BFF44DA1C2772A0213B3 0xA7 GT PUSH20 0x3F1397CBEEF42000122564736F6C634300080700 CALLER ",
							"sourceMap": "33:18:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220025f17f594d1a26a61bff44da1c2772a0213b3a711733f1397cbeef42000122564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0x5F OR CREATE2 SWAP5 0xD1 LOG2 PUSH11 0x61BFF44DA1C2772A0213B3 0xA7 GT PUSH20 0x3F1397CBEEF42000122564736F6C634300080700 CALLER ",
							"sourceMap": "33:18:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 33,
									"end": 51,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 33,
									"end": 51,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220025f17f594d1a26a61bff44da1c2772a0213b3a711733f1397cbeef42000122564736f6c63430008070033",
									".code": [
										{
											"begin": 33,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 33,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33,
											"end": 51,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33,
											"end": 51,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33,
											"end": 51,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"training/contracts/Inheritence,sol.sol\":\"Country\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"training/contracts/Inheritence,sol.sol\":{\"keccak256\":\"0x9cb65e7822eaa90115f6c08ab72133e71129fcee2632e9833d9e2bebe725c293\",\"urls\":[\"bzz-raw://fb43ac159b5946c89c833f0c76069006a362a7da36437f40c6275642c3a8971c\",\"dweb:/ipfs/QmcHrYXwxVN7PVoDKcHmfJPwUP23HiRVSGvaM5DatDNecd\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> training/contracts/Inheritence,sol.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "training/contracts/Inheritence,sol.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"training/contracts/Inheritence,sol.sol": {
				"ast": {
					"absolutePath": "training/contracts/Inheritence,sol.sol",
					"exportedSymbols": {
						"Country": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Country",
							"nameLocation": "42:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "33:18:0",
							"usedErrors": []
						}
					],
					"src": "0:51:0"
				},
				"id": 0
			}
		}
	}
}